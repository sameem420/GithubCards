{"version":3,"sources":["components/Card.js","components/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","console","log","className","src","avatar_url","alt","width","name","company","location","href","blog","target","rel","CardList","profiles","map","profile","key","id","App","state","userName","handleSubmit","event","a","preventDefault","Axios","get","resp","data","setState","onSubmit","this","type","placeholder","value","onChange","required","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAwBeA,G,MArBF,SAACC,GAEV,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,OAAf,UACI,qBAAKC,IAAKJ,EAAMK,WAAYC,IAAI,cAAcC,MAAM,OACpD,qBAAKJ,UAAU,OAAf,SACI,6BAAKH,EAAMQ,SAEf,qBAAKL,UAAU,UAAf,SACI,+CAAkBH,EAAMS,aAE5B,qBAAKN,UAAU,WAAf,SACI,+CAAkBH,EAAMU,cAE5B,qBAAKP,UAAU,OAAf,SACI,+BAAM,mBAAGQ,KAAMX,EAAMY,KAAMC,OAAQ,SAAUC,IAAI,aAA3C,oCCJPC,G,MAVE,SAACf,GACd,OACI,qBAAKG,UAAU,UAAf,SACI,8BACKH,EAAMgB,SAASC,KAAI,SAAAC,GAAO,OAAI,wBAAC,EAAD,2BAAUA,GAAV,IAAmBC,IAAKD,EAAQE,e,iBC4BhEC,E,4MA9BbC,MAAQ,CACNC,SAAU,GACVP,SAAW,I,EAEbQ,a,uCAAe,WAAOC,GAAP,iBAAAC,EAAA,6DACbD,EAAME,iBADO,SAEMC,IAAMC,IAAN,uCAA0C,EAAKP,MAAMC,WAF3D,OAEPO,EAFO,OAGPC,EAHO,sBAGI,EAAKT,MAAMN,UAHf,CAGyBc,EAAKC,OAC3C,EAAKC,SAAS,CAAChB,SAAWe,IAJb,2C,6GAMN,IAAD,OACR,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,uBAAM8B,SAAUC,KAAKV,aAAcrB,UAAU,YAA7C,UACE,uBACEgC,KAAK,OACLC,YAAY,kBACZjC,UAAU,WACVkC,MAAOH,KAAKZ,MAAMC,SAClBe,SAAU,SAAAb,GAAK,OAAI,EAAKO,SAAS,CAAET,SAAWE,EAAMZ,OAAOwB,SAC3DE,UAAQ,IAEV,4CAEF,cAAC,EAAD,CAAUvB,SAAUkB,KAAKZ,MAAMN,kB,GA1BnBwB,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c194f498.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"info\">\r\n            <img src={props.avatar_url} alt=\"profile pic\" width=\"75\"/>\r\n            <div className=\"name\">\r\n                <h2>{props.name}</h2>\r\n            </div>\r\n            <div className=\"company\">\r\n                <span>Company : @{props.company}</span>\r\n            </div>\r\n            <div className=\"location\">\r\n                <span>Location : {props.location}</span>\r\n            </div>\r\n            <div className=\"blog\">\r\n                <span><a href={props.blog} target={\"_blank\"} rel=\"noreferrer\">Personal Blog</a></span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport './CardList.css';\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div>\r\n                {props.profiles.map(profile => <Card {...profile} key={profile.id} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardList;","import React from 'react';\nimport './App.css';\nimport CardList from './components/CardList';\nimport Axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    userName: '',\n    profiles : []\n  };\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const resp = await Axios.get(`https://api.github.com/users/${this.state.userName}`);\n    const data = [...this.state.profiles, resp.data];\n    this.setState({profiles : data});\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <h1>GitHub Cards App</h1>\n      <form onSubmit={this.handleSubmit} className=\"inputForm\">\n        <input \n          type=\"text\" \n          placeholder=\"GitHub Username\"\n          className=\"material\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName : event.target.value })}\n          required \n        />\n        <button>Add</button>\n      </form>\n      <CardList profiles={this.state.profiles}/>\n    </div>\n  );}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}